apiVersion: v1
kind: ConfigMap
metadata:
  name: vaultwarden-config
  namespace: vaultwarden
data:
  ## Main data folder
  DATA_FOLDER: {{ .Values.DATA_FOLDER }}

  ## Individual folders, these override %DATA_FOLDER%
  RSA_KEY_FILENAME: {{ .Values.RSA_KEY_FILENAME }}
  ICON_CACHE_FOLDER: {{ .Values.ICON_CACHE_FOLDER }}
  ATTACHMENTS_FOLDER: {{ .Values.ATTACHMENTS_FOLDER }}
  SENDS_FOLDER: {{ .Values.SENDS_FOLDER }}
  TMP_FOLDER: {{ .Values.TMP_FOLDER }}

  ## Templates data folder, by default uses embedded templates
  ## Check source code to see the format
  TEMPLATES_FOLDER: {{ .Values.TEMPLATES_FOLDER }}
  ## Automatically reload the templates for every request, slow, use only for development
  RELOAD_TEMPLATES: {{ .Values.RELOAD_TEMPLATES }}

  ## Web vault settings
  WEB_VAULT_FOLDER: {{ .Values.WEB_VAULT_FOLDER }}
  WEB_VAULT_ENABLED: {{ .Values.WEB_VAULT_ENABLED }}

  #########################
  ### Database settings ###
  #########################

  ## Database URL
  ## When using SQLite, this is the path to the DB file, default to %DATA_FOLDER%/db.sqlite3
  #DATABASE_URL: {{ .Values.DATABASE_URL }}
  ## When using MySQL, specify an appropriate connection URI.
  ## Details: https://docs.diesel.rs/2.1.x/diesel/mysql/struct.MysqlConnection.html
  #DATABASE_URL: {{ .Values.DATABASE_URL }}
  ## When using PostgreSQL, specify an appropriate connection URI (recommended)
  ## or keyword/value connection string.
  ## Details:
  ## - https://docs.diesel.rs/2.1.x/diesel/pg/struct.PgConnection.html
  ## - https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
  DATABASE_URL: {{ .Values.DATABASE_URL }}

  ## Enable WAL for the DB
  ## Set to false to avoid enabling WAL during startup.
  ## Note that if the DB already has WAL enabled, you will also need to disable WAL in the DB,
  ## this setting only prevents Vaultwarden from automatically enabling it on start.
  ## Please read project wiki page about this setting first before changing the value as it can
  ## cause performance degradation or might render the service unable to start.
  ENABLE_DB_WAL: {{ quote .Values.ENABLE_DB_WAL }}

  ## Database connection retries
  ## Number of times to retry the database connection during startup, with 1 second delay between each retry, set to 0 to retry indefinitely
  DB_CONNECTION_RETRIES: {{ quote .Values.DB_CONNECTION_RETRIES }}

  ## Database timeout
  ## Timeout when acquiring database connection
  DATABASE_TIMEOUT: {{ quote .Values.DATABASE_TIMEOUT }}

  ## Database max connections
  ## Define the size of the connection pool used for connecting to the database.
  DATABASE_MAX_CONNS: {{ quote .Values.DATABASE_MAX_CONNS }}

  ## Database connection initialization
  ## Allows SQL statements to be run whenever a new database connection is created.
  ## This is mainly useful for connection-scoped pragmas.
  ## If empty, a database-specific default is used:
  ## - SQLite: "PRAGMA busy_timeout = 5000; PRAGMA synchronous = NORMAL;"
  ## - MySQL: ""
  ## - PostgreSQL: ""
  DATABASE_CONN_INIT: {{ .Values.DATABASE_CONN_INIT }}

  #################
  ### WebSocket ###
  #################

  ## Enable websocket notifications
  ENABLE_WEBSOCKET: {{ quote .Values.ENABLE_WEBSOCKET }}

  ##########################
  ### Push notifications ###
  ##########################

  ## Enables push notifications (requires key and id from https://vaultwarden.com/host)
  ## If you choose "European Union" Data Region, uncomment PUSH_RELAY_URI and PUSH_IDENTITY_URI then replace .com by .eu
  ## Details about mobile client push notification:
  ## - https://github.com/dani-garcia/vaultwarden/wiki/Enabling-Mobile-Client-push-notification
  PUSH_ENABLED: {{ quote .Values.PUSH_ENABLED }}
  PUSH_INSTALLATION_ID: {{ quote .Values.PUSH_INSTALLATION_ID }}
  PUSH_INSTALLATION_KEY: {{ .Values.PUSH_INSTALLATION_KEY }}
  ## Don't change this unless you know what you're doing.
  PUSH_RELAY_URI: {{ .Values.PUSH_RELAY_URI }}
  PUSH_IDENTITY_URI: {{ .Values.PUSH_IDENTITY_URI }}

  #####################
  ### Schedule jobs ###
  #####################

  ## Job scheduler settings
  ##
  ## Job schedules use a cron-like syntax (as parsed by https://crates.io/crates/cron),
  ## and are always in terms of UTC time (regardless of your local time zone settings).
  ##
  ## The schedule format is a bit different from crontab as crontab does not contains seconds.
  ## You can test the the format here: https://crontab.guru, but remove the first digit!
  ## SEC  MIN   HOUR   DAY OF MONTH    MONTH   DAY OF WEEK
  ## "0   30   9,12,15     1,15       May-Aug  Mon,Wed,Fri"
  ## "0   30     *          *            *          *     "
  ## "0   30     1          *            *          *     "
  ##
  ## How often (in ms) the job scheduler thread checks for jobs that need running.
  ## Set to 0 to globally disable scheduled jobs.
  JOB_POLL_INTERVAL_MS: {{ .Values.JOB_POLL_INTERVAL_MS }}
  ##
  ## Cron schedule of the job that checks for Sends past their deletion date.
  ## Defaults to hourly (5 minutes after the hour). Set blank to disable this job.
  SEND_PURGE_SCHEDULE: {{ .Values.SEND_PURGE_SCHEDULE }}
  ##
  ## Cron schedule of the job that checks for trashed items to delete permanently.
  ## Defaults to daily (5 minutes after midnight). Set blank to disable this job.
  TRASH_PURGE_SCHEDULE: {{ .Values.TRASH_PURGE_SCHEDULE }}
  ##
  ## Cron schedule of the job that checks for incomplete 2FA logins.
  ## Defaults to once every minute. Set blank to disable this job.
  INCOMPLETE_2FA_SCHEDULE: {{ .Values.INCOMPLETE_2FA_SCHEDULE }}
  ##
  ## Cron schedule of the job that sends expiration reminders to emergency access grantors.
  ## Defaults to hourly (3 minutes after the hour). Set blank to disable this job.
  EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE: {{ .Values.EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE }}
  ##
  ## Cron schedule of the job that grants emergency access requests that have met the required wait time.
  ## Defaults to hourly (7 minutes after the hour). Set blank to disable this job.
  EMERGENCY_REQUEST_TIMEOUT_SCHEDULE: {{ quote .Values.EMERGENCY_REQUEST_TIMEOUT_SCHEDULE }}
  ##
  ## Cron schedule of the job that cleans old events from the event table.
  ## Defaults to daily. Set blank to disable this job. Also without EVENTS_DAYS_RETAIN set, this job will not start.
  EVENT_CLEANUP_SCHEDULE: {{ quote .Values.EVENT_CLEANUP_SCHEDULE }}
  ## Number of days to retain events stored in the database.
  ## If unset (the default), events are kept indefinitely and the scheduled job is disabled!
  EVENTS_DAYS_RETAIN: {{ quote .Values.EVENTS_DAYS_RETAIN }}
  ##
  ## Cron schedule of the job that cleans old auth requests from the auth request.
  ## Defaults to every minute. Set blank to disable this job.
  AUTH_REQUEST_PURGE_SCHEDULE: {{ quote .Values.AUTH_REQUEST_PURGE_SCHEDULE }}

  ########################
  ### General settings ###
  ########################

  ## Domain settings
  ## The domain must match the address from where you access the server
  ## It's recommended to configure this value, otherwise certain functionality might not work,
  ## like attachment downloads, email links and U2F.
  ## For U2F to work, the server must use HTTPS, you can use Let's Encrypt for free certs
  ## To use HTTPS, the recommended way is to put Vaultwarden behind a reverse proxy
  ## Details:
  ## - https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS
  ## - https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples
  DOMAIN: {{ .Values.Domain }}

  ## Controls whether users are allowed to create vaultwarden Sends.
  ## This setting applies globally to all users.
  ## To control this on a per-org basis instead, use the "Disable Send" org policy.
  SENDS_ALLOWED: {{ .Values.SENDS_ALLOWED }}

  ## HIBP Api Key
  ## HaveIBeenPwned API Key, request it here: https://haveibeenpwned.com/API/Key
  HIBP_API_KEY: {{ .Values.HIBP_API_KEY }}

  ## Per-organization attachment storage limit (KB)
  ## Max kilobytes of attachment storage allowed per organization.
  ## When this limit is reached, organization members will not be allowed to upload further attachments for ciphers owned by that organization.
  ORG_ATTACHMENT_LIMIT: {{ .Values.ORG_ATTACHMENT_LIMIT }}
  ## Per-user attachment storage limit (KB)
  ## Max kilobytes of attachment storage allowed per user.
  ## When this limit is reached, the user will not be allowed to upload further attachments.
  USER_ATTACHMENT_LIMIT: {{ .Values.USER_ATTACHMENT_LIMIT }}
  ## Per-user send storage limit (KB)
  ## Max kilobytes of send storage allowed per user.
  ## When this limit is reached, the user will not be allowed to upload further sends.
  USER_SEND_LIMIT: {{ .Values.USER_SEND_LIMIT }}

  ## Number of days to wait before auto-deleting a trashed item.
  ## If unset (the default), trashed items are not auto-deleted.
  ## This setting applies globally, so make sure to inform all users of any changes to this setting.
  TRASH_AUTO_DELETE_DAYS: {{ .Values.TRASH_AUTO_DELETE_DAYS }}

  ## Number of minutes to wait before a 2FA-enabled login is considered incomplete,
  ## resulting in an email notification. An incomplete 2FA login is one where the correct
  ## master password was provided but the required 2FA step was not completed, which
  ## potentially indicates a master password compromise. Set to 0 to disable this check.
  ## This setting applies globally to all users.
  INCOMPLETE_2FA_TIME_LIMIT: {{ .Values.INCOMPLETE_2FA_TIME_LIMIT }}

  ## Disable icon downloading
  ## Set to true to disable icon downloading in the internal icon service.
  ## This still serves existing icons from $ICON_CACHE_FOLDER, without generating any external
  ## network requests. $ICON_CACHE_TTL must also be set to 0; otherwise, the existing icons
  ## will be deleted eventually, but won't be downloaded again.
  DISABLE_ICON_DOWNLOAD: {{ .Values.DISABLE_ICON_DOWNLOAD }}

  ## Controls if new users can register
  SIGNUPS_ALLOWED: {{ quote .Values.SIGNUPS_ALLOWED }}

  ## Controls if new users need to verify their email address upon registration
  ## Note that setting this option to true prevents logins until the email address has been verified!
  ## The welcome email will include a verification link, and login attempts will periodically
  ## trigger another verification email to be sent.
  SIGNUPS_VERIFY: {{ quote .Values.SIGNUPS_VERIFY }}

  ## If SIGNUPS_VERIFY is set to true, this limits how many seconds after the last time
  ## an email verification link has been sent another verification email will be sent
  SIGNUPS_VERIFY_RESEND_TIME: {{ quote .Values.SIGNUPS_VERIFY_RESEND_TIME }}

  ## If SIGNUPS_VERIFY is set to true, this limits how many times an email verification
  ## email will be re-sent upon an attempted login.
  SIGNUPS_VERIFY_RESEND_LIMIT: {{ .Values.SIGNUPS_VERIFY_RESEND_LIMIT }}

  ## Controls if new users from a list of comma-separated domains can register
  ## even if SIGNUPS_ALLOWED is set to false
  SIGNUPS_DOMAINS_WHITELIST: {{ .Values.SIGNUPS_DOMAINS_WHITELIST }}

  ## Controls whether event logging is enabled for organizations
  ## This setting applies to organizations.
  ## Disabled by default. Also check the EVENT_CLEANUP_SCHEDULE and EVENTS_DAYS_RETAIN settings.
  ORG_EVENTS_ENABLED: {{ quote .Values.ORG_EVENTS_ENABLED }}

  ## Controls which users can create new orgs.
  ## Blank or 'all' means all users can create orgs (this is the default):
  #ORG_CREATION_USERS: {{ .Values.ORG_CREATION_USERS }}
  ## 'none' means no users can create orgs:
  #ORG_CREATION_USERS: {{ .Values.ORG_CREATION_USERS }}
  ## A comma-separated list means only those users can create orgs:
  ORG_CREATION_USERS: {{ quote .Values.ORG_CREATION_USERS }}

  ## Invitations org admins to invite users, even when signups are disabled
  INVITATIONS_ALLOWED: {{ quote .Values.INVITATIONS_ALLOWED }}
  ## Name shown in the invitation emails that don't come from a specific organization
  INVITATION_ORG_NAME: {{ .Values.INVITATION_ORG_NAME }}
  
  ## The number of hours after which an organization invite token, emergency access invite token,
  ## email verification token and deletion request token will expire (must be at least 1)
  INVITATION_EXPIRATION_HOURS: {{ quote .Values.INVITATION_EXPIRATION_HOURS }}

  ## Controls whether users can enable emergency access to their accounts.
  ## This setting applies globally to all users.
  EMERGENCY_ACCESS_ALLOWED: {{ quote .Values.EMERGENCY_ACCESS_ALLOWED }}

  ## Controls whether users can change their email.
  ## This setting applies globally to all users
  EMAIL_CHANGE_ALLOWED: {{ quote .Values.EMAIL_CHANGE_ALLOWED }}

  ## Number of server-side passwords hashing iterations for the password hash.
  ## The default for new users. If changed, it will be updated during login for existing users.
  PASSWORD_ITERATIONS: {{ quote .Values.PASSWORD_ITERATIONS }}

  ## Controls whether users can set password hints. This setting applies globally to all users.
  PASSWORD_HINTS_ALLOWED: {{ quote .Values.PASSWORD_HINTS_ALLOWED }}

  ## Controls whether a password hint should be shown directly in the web page if
  ## SMTP service is not configured. Not recommended for publicly-accessible instances
  ## as this provides unauthenticated access to potentially sensitive data.
  SHOW_PASSWORD_HINT: {{ quote .Values.SHOW_PASSWORD_HINT }}

  #########################
  ### Advanced settings ###
  #########################

  ## Client IP Header, used to identify the IP of the client, defaults to "X-Real-IP"
  ## Set to the string "none" (without quotes), to disable any headers and just use the remote IP
  IP_HEADER: {{ .Values.IP_HEADER }}

  ## Icon service
  ## The predefined icon services are: internal, vaultwarden, duckduckgo, google.
  ## To specify a custom icon service, set a URL template with exactly one instance of `{}`,
  ## which is replaced with the domain. For example: `https://icon.example.com/domain/{}`.
  ##
  ## `internal` refers to Vaultwarden's built-in icon fetching implementation.
  ## If an external service is set, an icon request to Vaultwarden will return an HTTP
  ## redirect to the corresponding icon at the external service. An external service may
  ## be useful if your Vaultwarden instance has no external network connectivity, or if
  ## you are concerned that someone may probe your instance to try to detect whether icons
  ## for certain sites have been cached.
  ICON_SERVICE: {{ .Values.ICON_SERVICE }}

  ## Icon redirect code
  ## The HTTP status code to use for redirects to an external icon service.
  ## The supported codes are 301 (legacy permanent), 302 (legacy temporary), 307 (temporary), and 308 (permanent).
  ## Temporary redirects are useful while testing different icon services, but once a service
  ## has been decided on, consider using permanent redirects for cacheability. The legacy codes
  ## are currently better supported by the vaultwarden clients.
  ICON_REDIRECT_CODE: {{ quote .Values.ICON_REDIRECT_CODE }}

  ## Cache time-to-live for successfully obtained icons, in seconds (0 is "forever")
  ## Default: 2592000 (30 days)
  ICON_CACHE_TTL: {{ quote .Values.ICON_CACHE_TTL }}
  ## Cache time-to-live for icons which weren't available, in seconds (0 is "forever")
  ## Default: 2592000 (3 days)
  ICON_CACHE_NEGTTL: {{ quote .Values.ICON_CACHE_NEGTTL }}

  ## Icon download timeout
  ## Configure the timeout value when downloading the favicons.
  ## The default is 10 seconds, but this could be to low on slower network connections
  ICON_DOWNLOAD_TIMEOUT: {{ quote .Values.ICON_DOWNLOAD_TIMEOUT }}

  ## Icon blacklist Regex
  ## Any domains or IPs that match this regex won't be fetched by the icon service.
  ## Useful to hide other servers in the local network. Check the WIKI for more details
  ## NOTE: Always enclose this regex withing single quotes!
  ICON_BLACKLIST_REGEX: {{ quote .Values.ICON_BLACKLIST_REGEX }}

  ## Any IP which is not defined as a global IP will be blacklisted.
  ## Useful to secure your internal environment: See https://en.wikipedia.org/wiki/Reserved_IP_addresses for a list of IPs which it will block
  ICON_BLACKLIST_NON_GLOBAL_IPS: {{ quote .Values.ICON_BLACKLIST_NON_GLOBAL_IPS }}

  ## Client Settings
  ## Enable experimental feature flags for clients.
  ## This is a comma-separated list of flags, e.g. "flag1,flag2,flag3".
  ##
  ## The following flags are available:
  ## - "autofill-overlay": Add an overlay menu to form fields for quick access to credentials.
  ## - "autofill-v2": Use the new autofill implementation.
  ## - "browser-fileless-import": Directly import credentials from other providers without a file.
  ## - "fido2-vault-credentials": Enable the use of FIDO2 security keys as second factor.
  EXPERIMENTAL_CLIENT_FEATURE_FLAGS: {{ .Values.EXPERIMENTAL_CLIENT_FEATURE_FLAGS }}

  ## Require new device emails. When a user logs in an email is required to be sent.
  ## If sending the email fails the login attempt will fail!!
  REQUIRE_DEVICE_EMAIL: {{ quote .Values.REQUIRE_DEVICE_EMAIL }}

  ## Enable extended logging, which shows timestamps and targets in the logs
  EXTENDED_LOGGING: {{ quote .Values.EXTENDED_LOGGING }}

  ## Timestamp format used in extended logging.
  ## Format specifiers: https://docs.rs/chrono/latest/chrono/format/strftime
  LOG_TIMESTAMP_FORMAT: {{ quote .Values.LOG_TIMESTAMP_FORMAT }}

  ## Logging to Syslog
  ## This requires extended logging
  USE_SYSLOG: {{ quote .Values.USE_SYSLOG }}

  ## Logging to file
  LOG_FILE: {{ .Values.LOG_FILE }}

  ## Log level
  ## Change the verbosity of the log output
  ## Valid values are "trace", "debug", "info", "warn", "error" and "off"
  ## Setting it to "trace" or "debug" would also show logs for mounted
  ## routes and static file, websocket and alive requests
  LOG_LEVEL: {{ .Values.LOG_LEVEL }}

  ## Token for the admin interface, preferably an Argon2 PCH string
  ## Vaultwarden has a built-in generator by calling `vaultwarden hash`
  ## For details see: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page#secure-the-admin_token
  ## If not set, the admin panel is disabled
  ## New Argon2 PHC string
  ## Note that for some environments, like docker-compose you need to escape all the dollar signs `$` with an extra dollar sign like `$$`
  ## Also, use single quotes (') instead of double quotes (") to enclose the string when needed
  #ADMIN_TOKEN: {{ .Values.ADMIN_TOKEN }}
  ## Old plain text string (Will generate warnings in favor of Argon2)
  ADMIN_TOKEN: {{ .Values.ADMIN_TOKEN }}

  ## Enable this to bypass the admin panel security. This option is only
  ## meant to be used with the use of a separate auth layer in front
  DISABLE_ADMIN_TOKEN: {{ .Values.DISABLE_ADMIN_TOKEN }}

  ## Number of seconds, on average, between admin login requests from the same IP address before rate limiting kicks in.
  ADMIN_RATELIMIT_SECONDS: {{ quote .Values.ADMIN_RATELIMIT_SECONDS }}

  ## Allow a burst of requests of up to this size, while maintaining the average indicated by `ADMIN_RATELIMIT_SECONDS`.
  ADMIN_RATELIMIT_MAX_BURST: {{ quote .Values.ADMIN_RATELIMIT_MAX_BURST }}

  ## Set the lifetime of admin sessions to this value (in minutes).
  ADMIN_SESSION_LIFETIME: {{ quote .Values.ADMIN_SESSION_LIFETIME }}

  ## Allowed iframe ancestors (Know the risks!)
  ## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors
  ## Allows other domains to embed the web vault into an iframe, useful for embedding into secure intranets
  ## This adds the configured value to the 'Content-Security-Policy' headers 'frame-ancestors' value.
  ## Multiple values must be separated with a whitespace.
  ALLOWED_IFRAME_ANCESTORS: {{ .Values.ALLOWED_IFRAME_ANCESTORS }}

  ## Number of seconds, on average, between login requests from the same IP address before rate limiting kicks in.
  LOGIN_RATELIMIT_SECONDS: {{ quote .Values.LOGIN_RATELIMIT_SECONDS }}
  ## Allow a burst of requests of up to this size, while maintaining the average indicated by `LOGIN_RATELIMIT_SECONDS`.
  ## Note that this applies to both the login and the 2FA, so it's recommended to allow a burst size of at least 2.
  LOGIN_RATELIMIT_MAX_BURST: {{ quote .Values.LOGIN_RATELIMIT_MAX_BURST }}

  ## BETA FEATURE: Groups
  ## Controls whether group support is enabled for organizations
  ## This setting applies to organizations.
  ## Disabled by default because this is a beta feature, it contains known issues!
  ## KNOW WHAT YOU ARE DOING!
  ORG_GROUPS_ENABLED: {{ quote .Values.ORG_GROUPS_ENABLED }}

  ########################
  ### MFA/2FA settings ###
  ########################

  ## Yubico (Yubikey) Settings
  ## Set your Client ID and Secret Key for Yubikey OTP
  ## You can generate it here: https://upgrade.yubico.com/getapikey/
  ## You can optionally specify a custom OTP server
  YUBICO_CLIENT_ID: {{ quote .Values.YUBICO_CLIENT_ID }}
  YUBICO_SECRET_KEY: {{ .Values.YUBICO_SECRET_KEY }}
  YUBICO_SERVER: {{ .Values.YUBICO_SERVER }}

  ## Duo Settings
  ## You need to configure all options to enable global Duo support, otherwise users would need to configure it themselves
  ## Create an account and protect an application as mentioned in this link (only the first step, not the rest):
  ## https://help.vaultwarden.com/article/setup-two-step-login-duo/#create-a-duo-security-account
  ## Then set the following options, based on the values obtained from the last step:
  DUO_IKEY: {{ .Values.DUO_IKEY }}
  DUO_SKEY: {{ .Values.DUO_SKEY }}
  DUO_HOST: {{ .Values.DUO_HOST }}
  ## After that, you should be able to follow the rest of the guide linked above,
  ## ignoring the fields that ask for the values that you already configured beforehand.

  ## Email 2FA settings
  ## Email token size
  ## Number of digits in an email 2FA token (min: 6, max: 255).
  ## Note that the vaultwarden clients are hardcoded to mention 6 digit codes regardless of this setting!
  EMAIL_TOKEN_SIZE: {{ quote .Values.EMAIL_TOKEN_SIZE }}

  ## Token expiration time
  ## Maximum time in seconds a token is valid. The time the user has to open email client and copy token.
  EMAIL_EXPIRATION_TIME: {{ quote .Values.EMAIL_EXPIRATION_TIME }}
  ##
  ## Maximum attempts before an email token is reset and a new email will need to be sent.
  EMAIL_ATTEMPTS_LIMIT: {{ quote .Values.EMAIL_ATTEMPTS_LIMIT }}
  ##
  ## Setup email 2FA regardless of any organization policy
  EMAIL_2FA_ENFORCE_ON_VERIFIED_INVITE: {{ quote .Values.EMAIL_2FA_ENFORCE_ON_VERIFIED_INVITE }}
  ## Automatically setup email 2FA as fallback provider when needed
  EMAIL_2FA_AUTO_FALLBACK: {{ quote .Values.EMAIL_2FA_AUTO_FALLBACK }}

  ## Other MFA/2FA settings
  ## Disable 2FA remember
  ## Enabling this would force the users to use a second factor to login every time.
  ## Note that the checkbox would still be present, but ignored.
  DISABLE_2FA_REMEMBER: {{ quote .Values.DISABLE_2FA_REMEMBER }}
  ##
  ## Authenticator Settings
  ## Disable authenticator time drifted codes to be valid.
  ## TOTP codes of the previous and next 30 seconds will be invalid
  ##
  ## According to the RFC6238 (https://tools.ietf.org/html/rfc6238),
  ## we allow by default the TOTP code which was valid one step back and one in the future.
  ## This can however allow attackers to be a bit more lucky with there attempts because there are 3 valid codes.
  ## You can disable this, so that only the current TOTP Code is allowed.
  ## Keep in mind that when a sever drifts out of time, valid codes could be marked as invalid.
  ## In any case, if a code has been used it can not be used again, also codes which predates it will be invalid.
  AUTHENTICATOR_DISABLE_TIME_DRIFT: {{ quote .Values.AUTHENTICATOR_DISABLE_TIME_DRIFT }}

  ###########################
  ### SMTP Email settings ###
  ###########################

  ## Mail specific settings, set SMTP_FROM and either SMTP_HOST or USE_SENDMAIL to enable the mail service.
  ## To make sure the email links are pointing to the correct host, set the DOMAIN variable.
  ## Note: if SMTP_USERNAME is specified, SMTP_PASSWORD is mandatory
  SMTP_HOST: {{ quote .Values.SMTP_HOST }}
  SMTP_FROM: {{ .Values.SMTP_FROM }}
  SMTP_FROM_NAME: {{ quote .Values.SMTP_FROM_NAME }}
  SMTP_USERNAME: {{ quote .Values.SMTP_USERNAME }}
  SMTP_PASSWORD: {{ .Values.SMTP_PASSWORD }}
  SMTP_TIMEOUT: {{ quote .Values.SMTP_TIMEOUT }}

  ## Choose the type of secure connection for SMTP. The default is "starttls".
  ## The available options are:
  ## - "starttls": The default port is 587.
  ## - "force_tls": The default port is 465.
  ## - "off": The default port is 25.
  ## Ports 587 (submission) and 25 (smtp) are standard without encryption and with encryption via STARTTLS (Explicit TLS). Port 465 (submissions) is used for encrypted submission (Implicit TLS).
  SMTP_SECURITY: {{ quote .Values.SMTP_SECURITY }}
  SMTP_PORT: {{ quote .Values.SMTP_PORT }}

  ## Whether to send mail via the `sendmail` command
  USE_SENDMAIL: {{ quote .Values.USE_SENDMAIL }}
  ## Which sendmail command to use. The one found in the $PATH is used if not specified.
  SENDMAIL_COMMAND: {{ .Values.SENDMAIL_COMMAND }}

  ## Defaults for SSL is "Plain" and "Login" and nothing for Non-SSL connections.
  ## Possible values: ["Plain", "Login", "Xoauth2"].
  ## Multiple options need to be separated by a comma ','.
  SMTP_AUTH_MECHANISM: {{ .Values.SMTP_AUTH_MECHANISM }}

  ## Server name sent during the SMTP HELO
  ## By default this value should be is on the machine's hostname,
  ## but might need to be changed in case it trips some anti-spam filters
  HELO_NAME: {{ .Values.HELO_NAME }}

  ## Embed images as email attachments
  SMTP_EMBED_IMAGES: {{ quote  .Values.SMTP_EMBED_IMAGES }}

  ## SMTP debugging
  ## When set to true this will output very detailed SMTP messages.
  ## WARNING: This could contain sensitive information like passwords and usernames! Only enable this during troubleshooting!
  SMTP_DEBUG: {{ quote .Values.SMTP_DEBUG }}

  ## Accept Invalid Certificates
  ## DANGEROUS: This option introduces significant vulnerabilities to man-in-the-middle attacks!
  ## Only use this as a last resort if you are not able to use a valid certificate.
  ## If the Certificate is valid but the hostname doesn't match, please use SMTP_ACCEPT_INVALID_HOSTNAMES instead.
  SMTP_ACCEPT_INVALID_CERTS: {{ quote .Values.SMTP_ACCEPT_INVALID_CERTS }}

  ## Accept Invalid Hostnames
  ## DANGEROUS: This option introduces significant vulnerabilities to man-in-the-middle attacks!
  ## Only use this as a last resort if you are not able to use a valid certificate.
  SMTP_ACCEPT_INVALID_HOSTNAMES: {{ quote .Values.SMTP_ACCEPT_INVALID_HOSTNAMES }}

  #######################
  ### Rocket settings ###
  #######################

  ## Rocket specific settings
  ## See https://rocket.rs/v0.5/guide/configuration/ for more details.
  ROCKET_ADDRESS: {{ .Values.ROCKET_ADDRESS }}
  ## The default port is 8000, unless running in a Docker container, in which case it is 80.
  ROCKET_PORT: {{ .Values.ROCKET_PORT }}
  ROCKET_TLS: {{ .Values.ROCKET_TLS }}

  # vim: syntax=ini